#!/usr/bin/env python
# coding: utf-8

# <font color='blue'> 
# ### <u>–ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô –†–ï–í–¨–Æ–ï–†–ê</u>
# </font>
# 
# <font color='blue'>
# <br />
# –î–ê–ú–ò–†, —Ä–∞–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –í–ê–°! <br />
# <br />    
# 
# <br />
# –ú–µ–Ω—è –∑–æ–≤—É—Ç –ù–∏–∫–æ–ª–∞–π. <br />–ò –Ω–∞ —ç—Ç–æ–º —ç—Ç–∞–ø–µ –í–∞—à–µ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –∫ –Ω–æ–≤–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –æ—Ç –º–µ–Ω—è –±—É–¥—É—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ–º—É –∫–æ–¥—É. <br />–ß—Ç–æ–±—ã –º–µ–Ω—å—à–µ "–º—É—Å–æ—Ä–∏—Ç—å —ç—Ñ–∏—Ä" –∏ —á—Ç–æ–±—ã –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –Ω–∞–≥–ª—è–¥–Ω–æ –æ—Ç–¥–µ–ª—è—Ç—å—Å—è –æ—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–¥–∞, –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É—Å–ª–æ–≤–∏—Ç—å—Å—è –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è—Ö:<br /> <br />
# <u><b>–¢–ê–ö–û–ô –®–†–ò–§–¢</b></u> - –≤—Å–µ–≥–¥–∞ –Ω–∞—á–∞–ª–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è <br />
# <font color='green'>—Ç–∞–∫–æ–π —à—Ä–∏—Ñ—Ç</font> - –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ —Ç–æ–º, —á—Ç–æ –≤—Å—ë –û–ö <br/>
# <font color='orange'>—Ç–∞–∫–æ–π —à—Ä–∏—Ñ—Ç</font> - –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ —Ç–æ–º, —á—Ç–æ –≤—Å—ë –û–ö –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É,<br> –æ–¥–Ω–∞–∫–æ –µ—Å—Ç—å –Ω–∞ —á—Ç–æ –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –≤ –ø–ª–∞–Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ—Ö–Ω–∏–∫, –∏–ª–∏ –µ—Å—Ç—å —Å–ø–æ—Å–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –±–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫–∏–π –∏–ª–∏ –±—ã—Å—Ç—Ä—ã–π –∫–æ–¥ <br/>
# <font color='red'>—Ç–∞–∫–æ–π —à—Ä–∏—Ñ—Ç</font> - –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ —Ç–æ–º, —á—Ç–æ –µ—Å—Ç—å –∫—Ä–∏—Ç–∏—á–Ω—ã–π –º–æ–º–µ–Ω—Ç, –≤–ª–∏—è—é—â–∏–π –Ω–∞ –±–∏–∑–Ω–µ—Å-—Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–µ–∫—Ç–∞.<br/>
# </font><br /><br />
# <font color='green'>–ú–æ–µ–π —Ü–µ–ª—å—é —è–≤–ª—è–µ—Ç—Å—è –Ω–µ "—É–ª–∏—á–∏—Ç—å" –≤ –Ω–µ –∑–Ω–∞–Ω–∏–∏, –∞ –ø—Ä–æ—Å—Ç–æ –≤—ã—Å–∫–∞–∑–∞—Ç—å —Å–≤–µ—Ä—Ö—É –í–∞—à–∏—Ö –∑–Ω–∞–Ω–∏–π - —Å–≤–æ–π –æ–ø—ã—Ç, —á—Ç–æ –±—ã –í—ã –º–æ–≥–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –¥–ª—è –í–∞—à–µ–≥–æ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —É—Å–ø–µ—Ö–∞)
# <br>
# </font>
# <br>
# 
# </font>

# # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è —Ç–∞—Ä–∏—Ñ–æ–≤

# –í –≤–∞—à–µ–º —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≤–µ–¥–µ–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ —ç—Ç–∏ —Ç–∞—Ä–∏—Ñ—ã (–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞ –∫—É—Ä—Å–∞ ¬´–°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö¬ª). –ù—É–∂–Ω–æ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–æ–¥–µ–ª—å –¥–ª—è –∑–∞–¥–∞—á–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–±–µ—Ä–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ. –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è ‚Äî –≤—ã –µ—ë —É–∂–µ —Å–¥–µ–ª–∞–ª–∏.
# 
# –ü–æ—Å—Ç—Ä–æ–π—Ç–µ –º–æ–¥–µ–ª—å —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±–æ–ª—å—à–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ–º *accuracy*. –ß—Ç–æ–±—ã —Å–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ, –Ω—É–∂–Ω–æ –¥–æ–≤–µ—Å—Ç–∏ –¥–æ–ª—é –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ –¥–æ 0.75. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ *accuracy* –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.

# ## 1. –û—Ç–∫—Ä–æ–π—Ç–µ –∏ –∏–∑—É—á–∏—Ç–µ —Ñ–∞–π–ª

# In[6]:


from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
import pandas as pd


# In[7]:


data = pd.read_csv('/datasets/users_behavior.csv')


# In[9]:


data.shape


# In[10]:


data.head()


# –î–∞—Ç–∞—Å–µ—Ç —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 3 214 –æ–±—ä–µ–∫—Ç–æ–≤ –∏ 5 –ø—Ä–∏–∑–Ω–∞–∫–æ–≤. –¶–µ–ª–µ–≤–æ–π –ø—Ä–∏–∑–Ω–∞–∫ –¥–ª—è –Ω–∞—à–µ–π –∑–∞–¥–∞—á–∏ ‚Äì is_ultra, —Ç.–µ. –º–æ–¥–µ–ª—å, –∫–æ—Ç–æ—Ä—É—é –º—ã –ø–æ–ø—ã—Ç–∞–µ–º—Å—è –ø–æ—Å—Ç—Ä–æ–∏—Ç—å, –±—É–¥–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ 1 –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç—É –Ω—É–∂–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ç–∞—Ä–∏—Ñ "–£–ª—å—Ç—Ä–∞" –∏–ª–∏ 0 –µ—Å–ª–∏ —Ç–∞—Ä–∏—Ñ "–°–º–∞—Ä—Ç". –í —ç—Ç–æ–º –∏ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –∑–∞–¥–∞—á–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏, —Ç.–∫. –Ω–∞—à —Ü–µ–ª–µ–≤–æ–π –ø—Ä–∏–∑–Ω–∞–∫ —è–≤–ª—è–µ—Ç—Å—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã–º.

# ## 2. –†–∞–∑–±–µ–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –≤—ã–±–æ—Ä–∫–∏

# –°–ø—Ä—è—Ç–∞–Ω–Ω–æ–π —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–∏ –≤ –∑–∞–¥–∞–Ω–∏–∏ –Ω–µ—Ç, –ø–æ—ç—Ç–æ–º—É –º–æ–∂–µ—Ç —Ä–∞–∑–±–∏—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–π –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Ç—Ä–∏ —á–∞—Å—Ç–∏: –æ–±—É—á–∞—é—â—É—é, –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω—É—é –∏ —Ç–µ—Å—Ç–æ–≤—É—é. –†–∞–∑–º–µ—Ä—ã —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–æ–≤ —Å–¥–µ–ª–∞–µ–º —Ä–∞–≤–Ω—ã–º–∏.
# 
# 

# In[12]:


# –ó–∞—Ñ–∏–∫—Å–∏—Ä—É–µ–º –ø—Å–µ–≤–¥–æ—Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å –¥–ª—è –≤—Å–µ—Ö –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –≤ –ø—Ä–æ–µ–∫—Ç–µ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤
rnd_state = 202006


# In[25]:


# 60% –æ—Ç–≤–æ–¥–∏–º –ø–æ–¥ –æ–±—É—á–∞—é—â—É—é –≤—ã–±–æ—Ä–∫—É
df_train, df_valid = train_test_split(data, test_size=0.4, random_state=rnd_state)
# –ø–æ–ª–æ–≤–∏–Ω—É –∏–∑ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è 40% –æ—Ç–¥–∞–µ–º –Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω—É—é, –¥—Ä—É–≥—É—é –ø–æ–ª–æ–≤–∏–Ω—É ‚Äì –Ω–∞ —Ç–µ—Å—Ç–æ–≤—É—é
df_valid, df_test = train_test_split(df_valid, test_size=0.5, random_state=rnd_state)


# –í –∏—Ç–æ–≥–µ –ø–æ–ª—É—á–∏–ª–∏ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ: 60% | 20% | 20%
# 
# 

# –ß—É—Ç—å –ø–æ–∑–¥–Ω–µ–µ, –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–¥–µ–ª–∏ –Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω–æ–π –≤—ã–±–æ—Ä–∫–µ –≤—ã–ø–æ–ª–Ω–∏–º –æ—Ü–µ–Ω–∫—É –µ—â—ë –∏ –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–º –Ω–∞–±–æ—Ä–µ. –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ü–µ–Ω–∏—Ç—å –≥–æ—Ç–æ–≤—É—é –º–æ–¥–µ–ª—å.
# 
# 

# <font color='blue'><u><b>–ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô –†–ï–í–¨–Æ–ï–†–ê</b></u></font><br />
# <font color='green'>
# –û–ö
# 
# </b></font>

# ## 3. –ò—Å—Å–ª–µ–¥—É–π—Ç–µ –º–æ–¥–µ–ª–∏

# –î–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º —Å–ª–µ–¥—É—é—â–∏–µ –∏–∑—É—á–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏:
# 
# - –¥–µ—Ä–µ–≤–æ —Ä–µ—à–µ–Ω–∏–π / decision tree
# - —Å–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å / random forest
# - –ª–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫—É—é —Ä–µ–≥—Ä–µ—Å—Å–∏—é / logistic regression

# In[26]:


features_train = df_train.drop(['is_ultra'], axis=1)
target_train = df_train['is_ultra']

features_valid = df_valid.drop(['is_ultra'], axis=1)
target_valid = df_valid['is_ultra']


# In[27]:


def accuracy_score_valid(model):
    predictions_valid = model.predict(features_valid)
    return accuracy_score(target_valid, predictions_valid)


# # –î–µ—Ä–µ–≤–æ —Ä–µ—à–µ–Ω–∏–π

# In[28]:


# –ü–æ—Å–º–æ—Ç—Ä–∏–º –∫–∞–∫ –≥–ª—É–±–∏–Ω–∞ —Ä–µ—à–∞—é—â–µ–≥–æ –¥–µ—Ä–µ–≤–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ –æ—Ü–µ–Ω–∫—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏
for max_depth in range(1, 21, 2):
    model = DecisionTreeClassifier(max_depth=max_depth, random_state=rnd_state)
    model.fit(features_train, target_train)
    print(f"max_depth = {max_depth}:\t{accuracy_score_valid(model)}")


#  –°—É–¥—è –ø–æ –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω–æ–π –≤—ã–±–æ—Ä–∫–µ, –¥–µ—Ä–µ–≤–æ —Ä–µ—à–µ–Ω–∏–π –∏–º–µ–µ—Ç —Å–∞–º—É—é –≤—ã—Å–æ–∫—É—é –æ—Ü–µ–Ω–∫—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ 0.8087091757387247, –∫–æ–≥–¥–∞ –∑–∞–¥–∞–Ω –≥–∏–ø–µ—Ä–ø–∞—Ä–∞–º–µ—Ç—Ä –≥–ª—É–±–∏–Ω—ã —Ä–∞–≤–Ω—ã–π 5.

# # –°–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å 

# In[29]:



# –í –∫–∞—á–µ—Å—Ç–≤–µ –≥–∏–ø–µ—Ä–ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –≥–ª—É–±–∏–Ω—ã –¥–µ—Ä–µ–≤–∞ –≤–æ–∑—å–º–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ, –Ω–∞–π–¥–µ–Ω–Ω–æ–µ –¥–ª—è –ø—Ä–µ–¥—ã–¥—É—â–µ–π –º–æ–¥–µ–ª–∏.
# –ê –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ä–µ–≤—å–µ–≤ –¥–ª—è –Ω–∞—à–µ–≥–æ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ª–µ—Å–∞ –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 10 –¥–æ 100 —Å —à–∞–≥–æ–º 10.
for estim in range(10, 101, 10):
    model = RandomForestClassifier(n_estimators=estim, max_depth=5, random_state=rnd_state)
    model.fit(features_train, target_train)
    print(f"n_estimators = {estim}:\t{accuracy_score_valid(model)}")


# üìù –ú–æ–¥–µ–ª—å —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ª–µ—Å–∞ –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–∞—Ä–∏—Ñ —Ç–æ—á–Ω–µ–µ, –Ω–æ, –∫–∞–∫ –º—ã –≤–∏–¥–∏–º, –Ω–µ –Ω–∞ –º–Ω–æ–≥–æ ‚Äì 0.8180404354587869, –¥–∞–∂–µ –ø—Ä–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –¥–µ—Ä–µ–≤—å–µ–≤ –ª–µ—Å–∞ —Ä–∞–≤–Ω—ã–º 30.
# 
# 

# # –õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è 
# 

# In[30]:


def logistic_regression(solver='liblinear'):
    model = LogisticRegression(solver=solver, random_state=rnd_state)
    model.fit(features_train, target_train)
    return accuracy_score_valid(model)


# In[31]:


logistic_regression()


# In[32]:


solvers = ['newton-cg', 'lbfgs']


# In[33]:


for solver in solvers:
    print(f'{solver}: {logistic_regression(solver=solver)}')


# –î–∞–∂–µ –∏—Å–ø–æ–ª—å–∑—É—è –¥—Ä—É–≥–æ–π –∞–ª–≥–æ—Ä–∏—Ç–º –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –º–æ–¥–µ–ª—å –ª–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–æ–π —Ä–µ–≥—Ä–µ—Å—Å–∏–∏ –º–µ–Ω–µ–µ —Ç–æ—á–Ω–∞, —á–µ–º –¥–µ—Ä–µ–≤–æ —Ä–µ—à–µ–Ω–∏–π –∏ —Å–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å.

# ## 4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–æ–¥–µ–ª—å –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–µ

# –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –Ω–∞—à–∏—Ö —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ –Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω–æ–π –≤—ã–±–æ—Ä–∫–µ –º—ã –≤—ã—è—Å–Ω–∏–ª–∏, —á—Ç–æ —Å–∞–º—É—é –≤—ã—Å–æ–∫—É—é –æ—Ü–µ–Ω–∫—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –¥–∞–µ—Ç –ª–µ—Å —Ä–µ—à–µ–Ω–∏–π —Å –≥–ª—É–±–∏–Ω–æ–π —Ä–∞–≤–Ω–æ–π 7 –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –¥–µ—Ä–µ–≤—å–µ–≤ —Ä–∞–≤–Ω—ã–º 70.
# 
# 

# In[34]:


features_test = df_test.drop(['is_ultra'], axis=1)
target_test = df_test['is_ultra']

model = RandomForestClassifier(n_estimators=30, max_depth=5, random_state=rnd_state)
model.fit(features_train, target_train)

predictions_test = model.predict(features_test)
accuracy_score(target_test, predictions_test)


# –ù–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–µ –Ω–∞—à–∞ –º–æ–¥–µ–ª—å —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ª–µ—Å–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–±–ª–∏–∂–µ–Ω–Ω–æ–µ –∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–π –≤—ã–±–æ—Ä–∫–µ –∑–Ω–∞—á–µ–Ω–∏–µ accuracy. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –º—ã –Ω–µ –≤–∏–¥–∏–º –∑–¥–µ—Å—å —è–≤–Ω–æ–π –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏–µ–º, –∏ –º–æ–∂–µ–º —Å—á–∏—Ç–∞—Ç—å, —á—Ç–æ –Ω–∞–º —É–¥–∞–ª–æ—Å—å –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–æ–¥–µ–ª—å –¥–ª—è –∑–∞–¥–∞—á–∏ –±–∏–Ω–∞—Ä–Ω–æ–π –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–±–µ—Ä–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ.
# 
# 

# <font color='blue'> 
# ### <u>–ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô –†–ï–í–¨–Æ–ï–†–ê</u>
# </font>
# <font color='green'>
# –ø–æ–Ω—è—Ç–Ω–æ, –æ–∫
# <br>
# </font>

# <font color='blue'><u><b>–ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô –†–ï–í–¨–Æ–ï–†–ê</b></u></font><br />
# <font color='green'>
# <br/> –î–∞–º–∏—Ä,  <br>
# —Ä–∞–±–æ—Ç–∞ —Ç–∞–∫–∞—è, —á—Ç–æ –Ω–µ —Ä–∞–∑–≥–Ω–∞—Ç—å—Å—è –≤–∑–≥–ª—è–¥–æ–º)))))<br>
# –í—Å—ë –ª–æ–≥–∏—á–Ω–æ, –∞–¥–µ–∫–≤–∞—Ç–Ω–æ, –≤–¥—É–º—á–∏–≤–æ –∏ —Å –≤—ã–≤–æ–¥–∞–º–∏ - —ç—Ç–æ –≤–∞–∂–Ω–æ.<br>
# –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–ª–∏ –ø–µ—Ä–µ–±–æ—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–æ–¥–µ–ª–µ–π.....
# –ú–Ω–µ –∏ –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ –Ω–µ—á–µ–≥–æ)<br>
# 
# –û—Ç–º–µ—á—É —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –º–æ–º–µ–Ω—Ç, —Ç–∞–∫ –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏ (—ç—Ç–æ–≥–æ –Ω–µ –±—ã–ª–æ –≤ –∑–∞–¥–∞–Ω–∏–∏)<br>
# –ù–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ, —Å–æ–≤–º–µ—Å—Ç–Ω–æ —Å AUC (—ç—Ç–æ –≤–µ–¥—å –ª–∏—à—å –æ–±–æ–±—â—ë–Ω–Ω–∞—è –º–µ—Ç—Ä–∏–∫–∞), –æ—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç—Ä–∏–∫–∏ "–ø–æ–ª–Ω–æ—Ç–∞" "—Ç–æ—á–Ω–æ—Å—Ç—å" TruePositive....
# –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –∑–∞–±—Ä–∞–∫–æ–≤–∞—Ç—å –º–æ–¥–µ–ª–∏ —Å –≤—ã—Å–æ–∫–∏–º AUC –Ω–æ –Ω–∏–∑–∫–æ–π –±–∏–∑–Ω–µ—Å-–ø–æ–ª–µ–∑–Ω–æ—Å—Ç—å—é. –ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–¥–µ–ª—å –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –æ—á–µ–Ω—å –ø–ª–æ—Ö–æ –æ—Ç—Ç–æ–∫. –ù–æ AUC –º–æ–∂–µ—Ç –æ–∫–∞–∑–∞—Ç—å—Å—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—ã—Å–æ–∫–∏–º, —Å—Ç–∞–≤–∏–º –µ—ë –≤ –±–æ–π, –∞ –Ω–∞ –¥–µ–ª–µ - —Ö–æ—Ä–æ—à–æ –µ—Å–ª–∏ –Ω–µ —É–±—ã—Ç–∫–∏ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞...   <br>
#     
# <br><br>–°–ü–ê–°–ò–ë–û)<br>
#  –£–î–ê–ß–ò –í –î–ê–õ–¨–ù–ï–ô–®–ï–ú –û–ë–£–ß–ï–ù–ò–ò!!!
# 
# </b></font>

# ## 5. (–±–æ–Ω—É—Å) –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–æ–¥–µ–ª–∏ –Ω–∞ –∞–¥–µ–∫–≤–∞—Ç–Ω–æ—Å—Ç—å

# In[35]:


data['is_ultra'].value_counts()


# –î–ª—è –∑–∞–¥–∞—á –±–∏–Ω–∞—Ä–Ω–æ–π –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –º–µ—Ç–æ–¥—ã:
# 
# –ú–∞—Ç—Ä–∏—Ü–∞ –æ—à–∏–±–æ–∫ / confusion matrix
# –¢–µ—Å—Ç—ã –±–∏–Ω–∞—Ä–Ω–æ–π –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ / binary classification tests
# –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ / conversion rates
# ROC-–∫—Ä–∏–≤–∞—è / ROC curve
# –°–æ–≤–æ–∫—É–ø–Ω—ã–π –¥–æ—Ö–æ–¥ / cumulative gain
# Lift-–∫—Ä–∏–≤–∞—è / lift chart

# –†–∞–±–æ—Ç–∞–µ—Ç –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ —Å–æ —Å–ª—É—á–∞–π–Ω–æ–π.
# 
# 

# In[36]:


df_test['is_ultra'].value_counts()


# –î–æ–ª—è –±–æ–ª—å—à–µ–≥–æ –∫–ª–∞—Å—Å–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–∏ —Ä–∞–≤–Ω–∞ ~0.69; –ø–æ–ª—É—á–µ–Ω–Ω–∞—è –Ω–∞–º–∏ –º–æ–¥–µ–ª—å –∏–º–µ–µ—Ç accuracy ~0.79. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –º—ã –º–æ–∂–µ–º —Å—á–∏—Ç–∞—Ç—å –º–æ–¥–µ–ª—å –∞–¥–µ–∫–≤–∞—Ç–Ω–æ–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ.
# 
# 

# ## –ß–µ–∫-–ª–∏—Å—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞

# –ü–æ—Å—Ç–∞–≤—å—Ç–µ 'x' –≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–∞—Ö. –î–∞–ª–µ–µ –Ω–∞–∂–º–∏—Ç–µ Shift+Enter.

# - [x] Jupyter Notebook –æ—Ç–∫—Ä—ã—Ç
# - [ ] –í–µ—Å—å –∫–æ–¥ –∏—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫
# - [ ] –Ø—á–µ–π–∫–∏ —Å –∫–æ–¥–æ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –≤ –ø–æ—Ä—è–¥–∫–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è
# - [ ] –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–µ 1: –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏ –∏–∑—É—á–µ–Ω—ã
# - [ ] –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–µ 2: –¥–∞–Ω–Ω—ã–µ —Ä–∞–∑–±–∏—Ç—ã –Ω–∞ —Ç—Ä–∏ –≤—ã–±–æ—Ä–∫–∏
# - [ ] –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–µ 3: –ø—Ä–æ–≤–µ–¥–µ–Ω–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π
#     - [ ] –†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–æ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π –º–æ–¥–µ–ª–∏
#     - [ ] –†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–æ —Ö–æ—Ç—è –±—ã 3 –∑–Ω–∞—á–µ–Ω–∏—è –≥–∏–ø–µ–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å –º–æ–¥–µ–ª–∏
#     - [ ] –ù–∞–ø–∏—Å–∞–Ω—ã –≤—ã–≤–æ–¥—ã –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
# - [ ] –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–µ 3: –ü—Ä–æ–≤–µ–¥–µ–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
# - [ ] –£–¥–∞–ª–æ—Å—å –¥–æ—Å—Ç–∏—á—å accuracy –Ω–µ –º–µ–Ω—å—à–µ 0.75
# 

# In[ ]:




